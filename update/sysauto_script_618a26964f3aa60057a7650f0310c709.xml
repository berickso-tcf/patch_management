<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <condition/>
        <conditional>false</conditional>
        <name>Create Patch Decisions</name>
        <run_as display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period/>
        <run_start>2016-11-02 14:55:34</run_start>
        <run_time>1970-01-01 12:11:00</run_time>
        <run_type>monthly</run_type>
        <script><![CDATA[var affectedPbl = getBaselines();
var gdt = new GlideDateTime();
var currentDate = gdt.getYearLocalTime() + '-' + gdt.getMonthLocalTime() + '-01';
var insertCount = 0;
gs.info('Starting patch decision generation on ' + affectedPbl.length + ' objects.\nBaseline IDs = ' + affectedPbl);

for (i=0; i < affectedPbl.length; i++) {
	var newDec = new GlideRecord('x_tcff_patch_mgmt_patch_decision');
	newDec.initialize();
	newDec.baseline_item = affectedPbl[i];
	newDec.patch_period = currentDate;
	newDec.insert();
	var nextReview = setNextReview(affectedPbl[i]);
	insertCount++;
	gs.info('inserted a decision for ' + affectedPbl[i] + '\nSet date to ' + nextReview);
}
gs.info('Finished inserting patch decisions.  Total inserts = ' + insertCount.toString());


function getBaselines() {
	var pblArr = [];
	var pbl = new GlideRecord('x_tcff_patch_mgmt_baseline');
	pbl.addEncodedQuery('active=true^next_review_date<=javascript:gs.daysAgoEnd(0)');
	pbl.query();
	while (pbl.next()) {
		pblArr.push(pbl.sys_id.toString());
	}
	return pblArr;
}

function setNextReview(pdb) {
	var dtstr = '';
	var pbd = new GlideRecord('x_tcff_patch_mgmt_baseline');
	pbd.get(pdb);
	if (pbd.review_frequency == 'Monthly') {
		dtstr = gs.beginningOfNextMonth();
	}
	if (pbd.review_frequency == 'Quarterly') {
		dtstr = gs.endOfThisQuarter();
	}
	if (pbd.review_frequency == 'Semi-Annually') {
		var gdt = new GlideDateTime();
		var month = gdt.getMonthLocalTime();
		var year = gdt.getYearLocalTime();
		if (month < 7) {
			dtstr = year.toString() + '-07-01 00:00:00';
		} else {
			var yearint = parseInt(year) + 1;
			dtstr = yearint.toString() + '-01-01 00:00:00';
		}
	}
	//gs.info ('I think the datetime is ' + dtstr);
	var dateTimeStr = '';
	if (dtstr != '') {
		var datetime = new GlideDateTime(dtstr);
		dateTimeStr = datetime.getDate().toString();
		pbd.next_review_date = dateTimeStr;
	} else {
		pbd.next_review_date = '';
	}
	pbd.update();
	return dateTimeStr;
}
]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>brett.erickson</sys_created_by>
        <sys_created_on>2016-11-02 16:00:56</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>618a26964f3aa60057a7650f0310c709</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>Create Patch Decisions</sys_name>
        <sys_package display_value="Patch Management" source="x_tcff_patch_mgmt">d1edfd9d4f5ae20057a7650f0310c747</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Patch Management">d1edfd9d4f5ae20057a7650f0310c747</sys_scope>
        <sys_update_name>sysauto_script_618a26964f3aa60057a7650f0310c709</sys_update_name>
        <sys_updated_by>brett.erickson</sys_updated_by>
        <sys_updated_on>2017-04-14 16:11:07</sys_updated_on>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
